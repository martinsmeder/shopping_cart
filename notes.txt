==================================== Testing ==================================
Mocking child-components: https://medium.com/@taylormclean15/jest-testing-mocking-child-components-to-make-your-unit-tests-more-concise-18691ef6a0c2
Queries: https://testing-library.com/docs/queries/about/
Cheatsheet: https://testing-library.com/docs/dom-testing-library/cheatsheet/
ID's: https://testing-library.com/docs/queries/bytestid/
User event's: https://testing-library.com/docs/user-event/intro/

Prioritize High-Impact Areas:
Identify the most critical and complex parts of your application. Components 
that handle critical user interactions, data processing, or have complex logic 
are excellent candidates for testing.

Unit Testing:
Focus on unit tests for individual components and functions. These tests are 
generally easier to write, maintain, and run. They help you catch issues early 
in the development process.

===================================== Router ==================================
Tutorial: https://reactrouter.com/en/main/start/tutorial
Docs: https://reactrouter.com/en/main